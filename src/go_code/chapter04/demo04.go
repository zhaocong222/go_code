package main

import (
	"fmt"
)

func main() {
	var i int = 5
	//二进制输出
	fmt.Printf("%b\n", i)

	//八进制： 0-7， 满8进1，以数字0开头表示
	var j int = 011 // 011=> 9
	fmt.Println("j=", j)

	//16进制 以0x或者0X开头表示
	var k int = 0x11 // 17
	fmt.Println("k=", k)

	//2进制转10进制规则:
	//从最低位开始（右边的），将每个位上的数提取出来，乘以2的（位数-1）次方,然后求和
	//1011 => 1 * 2的0次方 + 1 * 2的1次方 + 0 * 2的2次方 + 1 * 2的3次方 =>11

	//2进制转8进制规则:
	//从最低位开始（右边的），将每个位上的数提取出来，乘以8的（位数-1）次方,然后求和
	
	//十六进制，是计算机中数据的一种表示方法。同我们日常生活中的表示法不一样。它由0-9，A-F组成，字母不区分大小写。与10进制的对应关系是：0-9对应0-9；A-F对应10-15；N进制的数可以用0~(N-1)的数表示，超过9的用字母A-F。
	//2进制转16进制规则:
	//从最低位开始（右边的），将每个位上的数提取出来，乘以16的（位数-1）次方,然后求和
	
}